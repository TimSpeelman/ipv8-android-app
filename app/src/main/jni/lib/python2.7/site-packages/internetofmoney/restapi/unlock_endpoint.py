import json

from twisted.web import http
from twisted.web import resource

from internetofmoney.utils.exceptions import WrongPasswordException


class UnlockEndpoint(resource.Resource):
    """
    This class is handles unlock operations for the Internet-of-Money module.
    """

    def __init__(self, session):
        resource.Resource.__init__(self)
        self.session = session

    def render_POST(self, request):
        parameters = http.parse_qs(request.content.read(), 1)
        if 'password' not in parameters:
            request.setResponseCode(http.BAD_REQUEST)
            return json.dumps({"error": "password parameter missing"})

        try:
            self.session.unlock(parameters['password'][0])
        except WrongPasswordException:
            request.setResponseCode(http.UNAUTHORIZED)
            return json.dumps({'success': False})

        return json.dumps({'success': True})
