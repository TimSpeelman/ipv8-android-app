import os

from internetofmoney.tests.restapi.base_api_test import AbstractApiTest
from internetofmoney.tests.util.twisted_thread import deferred


class TestBanksEndpoint(AbstractApiTest):
    """
    This class contains tests for the password endpoint.
    """

    @deferred(timeout=10)
    def test_password_no_param(self):
        """
        Test setting the password withing specifying a parameter using the RESTful API
        """
        self.should_check_equality = False
        return self.do_request('password', request_type='POST', expected_code=400)

    @deferred(timeout=10)
    def test_password_already_set(self):
        """
        Test setting the password when it's already set using the RESTful API
        """
        self.should_check_equality = False
        return self.do_request('password', request_type='POST', post_data={'password': 'abc'}, expected_code=500)

    @deferred(timeout=10)
    def test_password(self):
        """
        Test setting the password using the RESTful API
        """
        os.unlink(os.path.join(self.session.cache_dir, 'pwhash'))
        for manager in self.session.managers.itervalues():
            os.unlink(os.path.join(self.session.cache_dir, manager.persistent_storage_filename()))

        self.should_check_equality = False
        return self.do_request('password', request_type='POST', post_data={'password': 'abc'})
