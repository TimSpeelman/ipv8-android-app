from internetofmoney.RequiredField import RequiredField
from internetofmoney.RequiredInput import RequiredInput
from internetofmoney.tests.restapi.base_api_test import AbstractApiTest
from internetofmoney.tests.util.twisted_thread import deferred


class TestInputEndpoint(AbstractApiTest):
    """
    This class contains tests for the input endpoint.
    """

    @deferred(timeout=10)
    def test_input_no_input_name(self):
        """
        Test a request to the input endpoint when we don't pass an input name
        """
        self.should_check_equality = False
        return self.do_request('input', request_type='POST', expected_code=400, post_data={'test1': 'abc', 'test2': 42})

    @deferred(timeout=10)
    def test_input_no_input_name(self):
        """
        Test a request to the input endpoint with unexpected input
        """
        self.should_check_equality = False
        return self.do_request('input', request_type='POST', expected_code=500,
                               post_data={'input_name': 'what', 'test1': 'abc', 'test2': 42})

    @deferred(timeout=10)
    def test_input(self):
        """
        Test whether input is processed when we use the input endpoint of the RESTful API
        """
        required_fields = [RequiredField('test1'), RequiredField('test2')]
        required_input = RequiredInput('test_input', required_fields)
        test_deferred = self.session.input_handler(required_input)
        self.should_check_equality = False
        self.do_request('input', request_type='POST',
                        post_data={'input_name': 'test_input', 'test1': 'abc', 'test2': 42})
        return test_deferred
