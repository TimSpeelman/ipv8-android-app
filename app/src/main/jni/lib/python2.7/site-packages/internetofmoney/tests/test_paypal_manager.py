from dispersy.util import blocking_call_on_reactor_thread
from internetofmoney.database import InternetOfMoneyDB
from internetofmoney.managers.paypal.PayPalManager import PayPalManager
from internetofmoney.tests.test_base import BaseTestCase


class TestPayPalBaseManager(BaseTestCase):
    """
    This class contains tests for the PayPal manager
    """

    def setUp(self):
        super(TestPayPalBaseManager, self).setUp()
        database = InternetOfMoneyDB(self.temp_dir)
        self.paypal_manager = PayPalManager(database)

    def test_generate_auth_nonce(self):
        """
        Test the generation of an authentication nonce
        """
        self.assertEqual(self.paypal_manager.generate_auth_nonce(1234, 'test@test.com', 'abcd'),
                         '4lNd5NMetBmYp8QjkHp+fKgi7Vhsub3Zmt0IIo5Gmbk=')

    def test_get_bank_name_id(self):
        """
        Test the bank id/name of the PayPal manager
        """
        self.assertEqual(self.paypal_manager.get_bank_name(), 'PayPal')
        self.assertEqual(self.paypal_manager.get_bank_id(), 'PP')

    def test_get_headers(self):
        """
        Test the headers sent to the PayPal servers
        """
        headers = self.paypal_manager.get_paypal_headers(is_json=True)
        self.assertIn('User-Agent', headers)
        self.assertIn('Content-Type', headers)
