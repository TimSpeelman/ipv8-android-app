from internetofmoney.database import InternetOfMoneyDB
from internetofmoney.managers.ing.INGManager import INGManager
from internetofmoney.tests.test_base import BaseTestCase


class TestINGBaseManager(BaseTestCase):
    """
    This class contains tests for the ING manager
    """

    def setUp(self):
        super(TestINGBaseManager, self).setUp()
        database = InternetOfMoneyDB(self.temp_dir)
        self.ing_manager = INGManager(database)

    def test_get_bank_name_id(self):
        """
        Test the bank id/name of the ING manager
        """
        self.assertEqual(self.ing_manager.get_bank_name(), 'ING')
        self.assertEqual(self.ing_manager.get_bank_id(), 'INGB')

    def test_get_ing_headers(self):
        """
        Test the headers of a request to the ING servers
        """
        ing_headers = self.ing_manager.get_ing_headers()
        self.assertIsInstance(ing_headers, dict)
        self.assertIn('X-Capability', ing_headers)

    def test_result_code_check(self):
        """
        Test the check for a valid result code
        """
        self.assertFalse(self.ing_manager.check_result_code({}))
        self.assertFalse(self.ing_manager.check_result_code({"resultCode": "NOT-OK"}))
        self.assertTrue(self.ing_manager.check_result_code({"resultCode": "OK"}))

    def test_return_code_check(self):
        """
        Test the check for a valid return code
        """
        self.assertFalse(self.ing_manager.check_return_code({}))
        self.assertFalse(self.ing_manager.check_return_code({"returnCode": "NOT-OK"}))
        self.assertTrue(self.ing_manager.check_return_code({"returnCode": "OK"}))
